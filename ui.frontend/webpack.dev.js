const {merge} = require('webpack-merge');
const common = require('./webpack.common.js');
const path = require('path');

// Bypass requests that have already been proxied once (avoid infinite loop)
const bypassAlreadyProxiedRequests = {
    xfwd: true,
    bypass: (req) => {
        if (req.headers['x-forwarded-for'] !== undefined) {
            return req.path;
        }
    },
};

module.exports = env => {
    
    const writeToDisk = env && Boolean(env.writeToDisk);
    
    return merge(common, {
        mode: 'development',
        performance: {
            hints: 'warning',
            maxAssetSize: 1048576,
            maxEntrypointSize: 1048576
        },
        devServer: {
            port: 8080,
            static: {
                directory: path.join(__dirname,
                    'dist/'),
            },
            proxy: [
                // proxy application code (wknd) directly to webpack dist/
                {
                    // skip clientlib-base and clientlib-dependencies
                    context: (path) =>
                        path.startsWith('/etc.clientlibs/wknd')
                        && !path.includes('clientlib-base')
                        && !path.includes('clientlib-dependencies'),
                    // target the same port as devServer, only rewrite the path
                    target: 'http://localhost:8080',
                    pathRewrite: {
                        // mapping of asset files e.g.:
                        //      `/etc.clientlibs/wknd/clientlib-site.min.14aee73c91ea79ebbdd94db033c6a6ab.js`
                        //      to
                        //      `/dist/clientlib-site/site.js`//
                        // Groups:
                        // 1: ([a-zA-Z0-9-]+) - clientlib name
                        // 2: (\\.min)? - optional, dependent on `minify` option in AEM configuration of com.adobe.granite.ui.clientlibs.impl.HtmlLibraryManagerImpl
                        // 3: (\\.[a-z0-9]+)? - optional, hash added by AEM
                        // 4: ([a-z]+) - file extension
                        // 5: (.*) - optional, additional path parameters
                        '/etc\\.clientlibs/wknd/clientlibs/clientlib-([a-zA-Z0-9-]+)(\\.min)?(\\.[a-z0-9]+)?\\.([a-z]+)(.*)': '/clientlib-$1/$1.$4$5',
                        // mapping needed to access *.hot-update.(js|json) files generated by webpack HMR
                        '/etc\\.clientlibs/wknd/(.*hot-update.*)': '/$1'
                    },
                    ...bypassAlreadyProxiedRequests
                },
                {
                    context: () => true,
                    target: 'http://localhost:4502',
                }],
            client: {
                overlay: {
                    errors: true,
                    warnings: false,
                },
            },
            watchFiles: ['src/**/*'],
            hot: 'only',
            liveReload: false,
            devMiddleware: {
                writeToDisk: writeToDisk
            }
        }
    });
}
